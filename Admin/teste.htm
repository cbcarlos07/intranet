<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0059)http://10.51.19.100/mv/flex/AppRunner.html -->
<!-- saved from url=(0022)http://internet.e-mail --><!-- saved from url=(0014)about:internet --><HTML 
lang=en><HEAD><TITLE>SoulMV</TITLE><!-- 
Smart developers always View Source. 

This application was built using Adobe Flex, an open source framework
for building rich Internet applications that get delivered via the
Flash Player or to desktops via Adobe AIR. 

Learn more about Flex at http://flex.org 
// -->
<META content="text/html; charset=utf-8" http-equiv=Content-Type>
<META content="no-cache, no-store" http-equiv=Cache-Control>
<META content=no-cache http-equiv=Pragma>
<META content=-1 http-equiv=expires><!--  BEGIN Browser History required section --><LINK 
rel=stylesheet type=text/css href="teste_arquivos/history.css"><!--  END Browser History required section -->
<SCRIPT language=javascript src="teste_arquivos/AC_OETags.js"></SCRIPT>
<!--  BEGIN Browser History required section -->
<SCRIPT language=javascript src="teste_arquivos/history.js"></SCRIPT>
<!--  END Browser History required section --><!--  BEGIN import MV OCX editor JavaScript file -->
<SCRIPT language=javascript src="teste_arquivos/deployJava.js"></SCRIPT>

<SCRIPT language=javascript src="teste_arquivos/mvOCX.js"></SCRIPT>

<SCRIPT language=javascript src="teste_arquivos/ActiveFormMvEditor.js"></SCRIPT>

<SCRIPT language=javascript src="teste_arquivos/AxEditorLaudo.js"></SCRIPT>

<SCRIPT language=javascript src="teste_arquivos/AxEditorPsdi.js"></SCRIPT>
<!--  END import MV OCX editor JavaScript file --><!--  BEGIN import MV Bematech JavaScript file -->
<SCRIPT src="teste_arquivos/MVBematech.js"></SCRIPT>
<!--  END import MV Bematech JavaScript file -->
<STYLE>BODY {
	MARGIN: 0px; OVERFLOW: hidden
}
</STYLE>

<SCRIPT language=JavaScript type=text/javascript>
<!--
// -----------------------------------------------------------------------------
// Globals
// Major version of Flash required
var requiredMajorVersion = 10;
// Minor version of Flash required
var requiredMinorVersion = 0;
// Minor version of Flash required
var requiredRevision = 0;
// -----------------------------------------------------------------------------
// -->
</SCRIPT>

<SCRIPT language=javascript type=text/javascript>
	function foco(campo){
		globalvar = campo;
		setTimeout("globalvar.focus()",250);
	}
</SCRIPT>

<META name=GENERATOR content="MSHTML 9.00.8112.16669"></HEAD>
<BODY onload=foco(AppRunner); scroll=no>
<SCRIPT language=JavaScript type=text/javascript>
<!--
// Version check for the Flash Player that has the ability to start Player Product Install (6.0r65)
var hasProductInstall = DetectFlashVer(6, 0, 65);

// Version check based upon the values defined in globals
var hasRequestedVersion = DetectFlashVer(requiredMajorVersion, requiredMinorVersion, requiredRevision);

if ( hasProductInstall && !hasRequestedVersion ) {
	// DO NOT MODIFY THE FOLLOWING FOUR LINES
	// Location visited after installation is complete if installation is required
	var MMPlayerType = (isIE == true) ? "ActiveX" : "PlugIn";
	var MMredirectURL = window.location;
    document.title = document.title.slice(0, 47) + " - Flash Player Installation";
    var MMdoctitle = document.title;

	AC_FL_RunContent(
		"src", "playerProductInstall",
		"FlashVars", "MMredirectURL="+MMredirectURL+'&MMplayerType='+MMPlayerType+'&MMdoctitle='+MMdoctitle+"",
		"width", "100%",
		"height", "100%",
		"align", "middle",
		"id", "AppRunner",
		"quality", "high",
		"bgcolor", "#ffffff",
		"name", "AppRunner",
		"allowScriptAccess","always",
		"wmode", "opaque",
		"type", "application/x-shockwave-flash",
		"pluginspage", "http://www.adobe.com/go/getflashplayer"
	);
} else if (hasRequestedVersion) {

	// get today's time for cacheKey
	var d = new Date();
	d.setHours(0);
	d.setMinutes(0);
	d.setSeconds(0);	
	var cacheKey = String(d.getTime());
	
	// if we've detected an acceptable version
	// embed the Flash Content SWF when all tests are passed
	AC_FL_RunContent(
			"src", "AppRunner?"+ cacheKey,
			"FlashVars","cacheKey=" + cacheKey,		
			"width", "100%",
			"height", "100%",
			"align", "middle",
			"id", "AppRunner",
			"quality", "high",
			"bgcolor", "#ffffff",
			"name", "AppRunner",
			"allowScriptAccess","always",
			"wmode", "opaque",
			"type", "application/x-shockwave-flash",
			"pluginspage", "http://www.adobe.com/go/getflashplayer"
	);
  } else {  // flash is too old or we can't detect the plugin
    var alternateContent = 'Alternate HTML content should be placed here. '
  	+ 'This content requires the Adobe Flash Player. '
   	+ '<a href=http://www.adobe.com/go/getflash/>Get Flash</a>';
    document.write(alternateContent);  // insert non-flash content
  }

	//
	// Focus management
	//
	var flexPlayer = document.getElementById('AppRunner');
	flexPlayer.focus();
	
	// force focus to the Flex application when browser gains focus
	onfocus = function()
	{
		try
		{
			if (typeof(flexPlayer.activate) == "function")
				flexPlayer.activate(); 
		}
		catch(e) {};
	};
	
	//
	// Exit management
	//
	var _normalExit = true;
	
	// ensure exit when user closes the browser (i.e Alt+F4 or click on the close button)
	window.onbeforeunload = function () 
	{
		if (_normalExit)
		{
			if (typeof(flexPlayer.exitApplication) == "function")
			{
				flexPlayer.exitApplication();
				
				_normalExit = false;
				
				// warn user that should do a 'normal' application shutdown
				// put EXIT_WARNING = false in the config for disabling custom message
				var msg = null;
				if (typeof(flexPlayer.getExitMessage) == "function")
					msg = flexPlayer.getExitMessage();
				
				// a message should always be presented to 
				// give time for executing the EXIT action
				return msg ? msg : "";
			}
		}
	}


	function beforeUnloadToExternalApp()
	{
		window.onbeforeunload = function()
								{
									if (typeof(flexPlayer.exitApplication) == "function")
									{
										flexPlayer.exitApplication();
									}
								};
	}
	
	function removeAllElements()
	{
		try
		{
			// this will remove the portal			
			var elements = document.body.getElementsByTagName("DIV");
			for (var i=0; i < elements.length; i++)
				document.body.removeChild(elements[i]);			
	
			// remove flash and other not neeeded elements
			elements = document.body.childNodes;		
			for (var i=0; i < elements.length; i++)
				document.body.removeChild(elements[i]);			
		}
		catch(e) {}
	}
	
	// this is called by Flex when EXIT action occurs
	function finishApplication(url)
	{
		removeAllElements();		
		removeAllElements(); // IE needs double removing
		
		// this is needed when the application exit buttons are triggered
		if (_normalExit)
			window.close();
		document.location.replace(url);
	}

	function finishApplicationAndNavigate(url)
	{
		removeAllElements();		
		removeAllElements(); // IE needs double removing

		_normalExit = false;
		document.location.replace(url);
	}
	
	/**
	 * Funcao necessaria para identificar o swf na pagina
	 * Usada no componente IFrame
	 */
	function askForEmbedObjectId (randomString)  
	{ 
	  
	 var embeds = document.getElementsByTagName('embed');  
	 for (var i = 0; i < embeds.length; i++) {
	  try {
	   var isTheGoodOne = embeds[i].checkObjectId(embeds[i].getAttribute('id'),randomString);  
	    if(isTheGoodOne) {  
	                 return embeds[i].getAttribute('id');  
	             }
	  } catch(e) {}
	     } 
	     var objects = document.getElementsByTagName('object');  
	        for(i = 0; i < objects.length; i++) {
	         try {
	             var isTheGoodOne = objects[i].checkObjectId(objects[i].getAttribute('id'),randomString);  
	             if(isTheGoodOne) {  
	                 return objects[i].getAttribute('id');  
	             }
	         } catch(e) {}
	        } 
	     
	    return null;  
	}
	document.askForEmbedObjectId = askForEmbedObjectId;
	
// -->
</SCRIPT>
<NOSCRIPT>
			
			
			
			
			
			<embed src="AppRunner.swf" quality="high" bgcolor="#ffffff"
				width="100%" height="100%" name="AppRunner" align="middle"
				play="true"
				loop="false"
				quality="high"
				allowScriptAccess="always"
				wmode="opaque"
				type="application/x-shockwave-flash"
				pluginspage="http://www.adobe.com/go/getflashplayer">
			</embed>
	</NOSCRIPT><!-- OCX Container -->
<DIV 
style="BORDER-BOTTOM: 0px; POSITION: absolute; BORDER-LEFT: 0px; BACKGROUND-COLOR: transparent; VISIBILITY: hidden; BORDER-TOP: 0px; BORDER-RIGHT: 0px" 
id=divOCX></DIV>
<SCRIPT language=JavaScript type=text/javascript>

	// Applet para acesso ao nome da máquina
	
	var archiveJar = "mv-system-registry-max7u40.jar";
	//Verifica se a versão do java é maior que 1.7.0_45+	
	if (deployJava.versionCheck("1.7.0_45+")){
		archiveJar = 'mv-system-registry-min7u45.jar';
	}

	var attributes = {
		id : "clientNameApplet",
		code : 'br.com.mv.infra.system.registry.applet.MVSystemRegistry.class',
		archive : archiveJar,
		width : 1,
		height : 1
	};
	deployJava.runApplet(attributes);	

	function getClientHostName(){
	     var machineName = document.clientNameApplet.getClientHostName();
	  return machineName;
	}  
	
	// Applet de impressão de etiquetas bematech e imressão direto nas portas (LPT, COM)

	var archiveJar = "mv-bema-printer-max7u40.jar";
	//Verifica se a versão do java é maior que 1.7.0_45+	
	if (deployJava.versionCheck("1.7.0_45+")){
		archiveJar = 'mv-bema-printer-min7u45.jar';
	}
	
	var attributes = {
		id : "MV_BemaReaderApplet",
		code : 'mv.component.applet.BematechDP20Applet',
		archive : archiveJar,
		width : 1,
		height : 1
	};
	
	var parameters = {
		autoStart : 'true'
	};
	deployJava.runApplet(attributes,parameters);
	
	// Applet para acesso ao serviço de impressão local
	
	var archiveJar = 'com.mvsistemas.appprintlib-max7u40.jar,PDFRenderer-max7u40.jar,log4j-1.2.15-max7u40.jar,mime-util-2.1.3-max7u40.jar,slf4j-api-1.5.10-max7u40.jar,slf4j-log4j12-1.5.10-max7u40.jar';
	//Verifica se a versão do java é maior que 1.7.0_45+	
	if (deployJava.versionCheck("1.7.0_45+")){
		 archiveJar = "com.mvsistemas.appprintlib-min7u45.jar,PDFRenderer-min7u45.jar,log4j-1.2.15-min7u45.jar,mime-util-2.1.3-min7u45.jar,slf4j-api-1.5.10-min7u45.jar,slf4j-log4j12-1.5.10-min7u45.jar";
	}
	
	var attributes = {
		id : "printManagerApplet",
		code : 'com.mvsistemas.printmanager.PrintManager',
		archive : archiveJar,
		width : 1,
		height : 1
	};
		
	deployJava.runApplet(attributes);	

	function printToPrinter(uri, printer, copies) {
		if (document.printManagerApplet) {
			if(uri.indexOf("?") >= 0) {
				uri += "&"
			} else {
				uri += "?"
			}
			uri += "t="+new Date().getTime();

			return document.printManagerApplet.print(uri, printer, copies);

		} else {
			return "PRINTER_SERVICE_NOT_AVAILABLE";
		}
	} 
</SCRIPT>
</BODY></HTML>
